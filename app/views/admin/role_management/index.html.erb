<% content_for :page_title, "Role Management" %>

<div class="space-y-6">
  <!-- Page Header -->
  <div class="flex items-center justify-between">
    <div>
      <h1 class="text-2xl font-bold text-gray-900">Role Management</h1>
      <p class="mt-1 text-sm text-gray-600">Manage user roles and permissions across the platform</p>
    </div>
  </div>

  <!-- Role Statistics Cards -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-green-800 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Super Admins</dt>
              <dd class="text-lg font-medium text-gray-900"><%= @role_counts[:admin] %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-yellow-600 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12z"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Moderators</dt>
              <dd class="text-lg font-medium text-gray-900"><%= @role_counts[:moderator] %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 bg-green-600 rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"/>
              </svg>
            </div>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Regular Users</dt>
              <dd class="text-lg font-medium text-gray-900"><%= @role_counts[:user] %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Search and Filters -->
  <div class="bg-white shadow rounded-lg">
    <div class="px-6 py-4 border-b border-gray-200">
      <h2 class="text-lg font-medium text-gray-900">User Management</h2>
    </div>
    <div class="p-6">
      <%= form_with url: admin_role_management_path, method: :get, local: true, class: "space-y-4" do |form| %>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <%= form.text_field :search, placeholder: "Search users...", value: params[:search], 
                class: "w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>
          <div>
            <%= form.select :role, 
                options_for_select([
                  ['All Roles', ''],
                  ['Admin', 'admin'],
                  ['Moderator', 'moderator'],
                  ['User', 'user']
                ], params[:role]), 
                {}, 
                { class: "w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" } %>
          </div>
          <div class="flex space-x-2">
            <%= form.submit "Filter", class: "bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500" %>
            <%= link_to "Clear", admin_role_management_path, class: "bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500" %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Users Table -->
  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              User
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Role
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Stats
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Joined
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Actions
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @users.each do |user| %>
            <tr id="user-row-<%= user.id %>">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10">
                    <% if user.avatar.attached? %>
                      <%= image_tag user.avatar, class: "h-10 w-10 rounded-full object-cover" %>
                    <% else %>
                      <div class="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                        <span class="text-sm font-medium text-gray-700"><%= user.username.first.upcase %></span>
                      </div>
                    <% end %>
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900"><%= user.display_name %></div>
                    <div class="text-sm text-gray-500">@<%= user.username %></div>
                    <div class="text-sm text-gray-500"><%= user.email %></div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span id="role-badge-<%= user.id %>" class="inline-flex px-2 py-1 text-xs font-semibold rounded-full 
                  <% case user.role %>
                    <% when 'admin' %>
                    bg-green-100 text-green-800
                    <% when 'moderator' %>
                      bg-yellow-100 text-yellow-800
                    <% else %>
                    bg-green-100 text-green-800
                  <% end %>">
                  <%= user.role.capitalize %>
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <div class="space-y-1">
                  <div><%= user.posts.count %> posts</div>
                  <div><%= user.comments.count %> comments</div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= user.created_at.strftime("%B %d, %Y") %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <% if user != current_user %>
                  <select 
                    onchange="updateUserRole(<%= user.id %>, this.value)"
                    class="rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 text-sm"
                    <% if user.admin? && User.where(role: 'admin').count <= 1 %>disabled<% end %>>
                    <% User::VALID_ROLES.each do |role| %>
                      <option value="<%= role %>" 
                              <%= 'selected' if user.role == role %>
                              <% if role == 'admin' && user.admin? && User.where(role: 'admin').count <= 1 %>disabled<% end %>>
                        <%= role.capitalize %>
                      </option>
                    <% end %>
                  </select>
                <% else %>
                  <span class="text-gray-400 text-sm">Your account</span>
                <% end %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Pagination -->
  <% if @users.respond_to?(:current_page) %>
    <div class="flex items-center justify-between">
      <div class="flex-1 flex justify-between sm:hidden">
        <% if @users.prev_page %>
          <%= link_to 'Previous', admin_role_management_path(page: @users.prev_page), 
              class: "relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
        <% end %>
        <% if @users.next_page %>
          <%= link_to 'Next', admin_role_management_path(page: @users.next_page), 
              class: "ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
        <% end %>
      </div>
      <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
        <div>
          <p class="text-sm text-gray-700">
            Showing
            <span class="font-medium"><%= (@users.current_page - 1) * @users.limit_value + 1 %></span>
            to
            <span class="font-medium"><%= [@users.current_page * @users.limit_value, @users.total_count].min %></span>
            of
            <span class="font-medium"><%= @users.total_count %></span>
            results
          </p>
        </div>
        <div>
          <%= paginate @users, theme: 'twitter_bootstrap_4' %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<!-- Success/Error Messages -->
<div id="flash-container" class="fixed top-4 right-4 z-50 space-y-2"></div>

<script>
function updateUserRole(userId, newRole) {
  const formData = new FormData();
  formData.append('user_id', userId);
  formData.append('role', newRole);

  // Add CSRF token
  const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
  formData.append('authenticity_token', token);

  fetch('<%= admin_role_management_update_role_path %>', {
    method: 'POST',
    body: formData,
    headers: {
      'X-CSRF-Token': token
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Update the role badge
      const roleBadge = document.getElementById(`role-badge-${userId}`);
      roleBadge.textContent = data.new_role;
      
      // Update badge styling
      roleBadge.className = 'inline-flex px-2 py-1 text-xs font-semibold rounded-full ';
      switch(newRole) {
        case 'admin':
          roleBadge.className += 'bg-green-100 text-green-800';
          break;
        case 'moderator':
          roleBadge.className += 'bg-yellow-100 text-yellow-800';
          break;
        default:
          roleBadge.className += 'bg-green-100 text-green-800';
      }
      
      showFlashMessage(data.message, 'success');
    } else {
      showFlashMessage(data.error, 'error');
      // Reset the select to its previous value
      location.reload();
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showFlashMessage('An error occurred while updating the role', 'error');
    location.reload();
  });
}

function showFlashMessage(message, type) {
  const container = document.getElementById('flash-container');
  const div = document.createElement('div');
  
  const bgColor = type === 'success' ? 'bg-green-50 border-green-200 text-green-800' : 'bg-red-50 border-red-200 text-red-800';
  const iconColor = type === 'success' ? 'text-green-400' : 'text-red-400';
  const icon = type === 'success' ? 
    'M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z' :
    'M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z';
  
  div.innerHTML = `
    <div class="flex items-center p-4 gap-3 rounded-lg shadow-lg border ${bgColor}">
      <div class="flex-shrink-0">
        <svg class="w-5 h-5 ${iconColor}" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="${icon}" clip-rule="evenodd"/>
        </svg>
      </div>
      <p class="flex-1">${message}</p>
      <button onclick="this.parentElement.parentElement.remove()" class="text-gray-400 hover:text-gray-600">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
    </div>
  `;
  
  container.appendChild(div);
  
  // Auto-remove after 5 seconds
  setTimeout(() => {
    if (div.parentElement) {
      div.remove();
    }
  }, 5000);
}
</script>